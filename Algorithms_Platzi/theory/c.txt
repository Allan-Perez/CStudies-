Types of errors:
	- Syntax errors: Wrong written stuff, or missing semicolon. 
	- Linkage errors: Miss-invoked function, or missing libraries
	- Execution errors: Executing the program, something doesn't make sense, and the computer yields an error.
	- Semantic errors: The program works, but doesn't yield the desired results


Identifier:
	The name that identifies a value.


Data types:
	- char (signed, unsigned)
	- int (short, -, long) (signed, unsigned)
	- long (signed, unsigned) (long, - )
	- float 
	- double 
	- long double 

The variables are just positions in memory that stores some value. The type of the variable will be used to define how much 
memory to reserve on the memory.



Operators: specific signs that will have a defined function.
They are divided in 4 types:
	- Assignation: 
		- =
		- +=
		- -=
		- *=
		- /=
		- %=
	- Arithmetic: This will have a hierarchy of priority to resolve. Remember PEMDAS (parentheses, exponentials, Mult,...)
		- +
		- -
		- /
		- *
		- %
	- Relational: stablish relationtionships between numbers or to compare
		- <
		- >
		- <=
		- >=
	- Logic: 
		- &&
		- !
		- ||







Remmember that here at C we don't have build-in strings, but instead we have a library called:
	string.h
That will help us with this purpose.
Strings are defined as follows:
	char MySuperString[30]
At this example, 30 is the number of characters that we will use.
We have a bunch of other helps with that library, such as comparing strings:
	strcmp(MySuperString, "hello worldd");
