
- graphs (BDOG): information packages (called nodes) that are related between them.
			One node = one information package.
			This kind of architecture is useful in e-commerce to find 
			probabilities of buying another item when a customer purchases something.
			This is also applicable a fraud-detection systems (insurances, financial services,...).
			This is useful for correlation between items, nodes, events,...


- newSQL: bigsql,... This is somewhat what Facebook uses. But the challenge the facebook faces
			is not so much the size of it, but the latency of queries, because they receive so much 
			requests per seconds (maybe millions), that normal or conventional databases wouldn't scale 

- Another architectures: 
	- Distributed: These DBs doesn't grow in one system, but in many systems, functioning like a FARM.
					So these DBs makes some replicas of the same data in a large number of systems, making 
					a huge check at the Durability principle of ACID. This system is based on the principle 
					of Divide and Conquer. 


The NoSQL databases can be classified by the type of data they are used to store:
	- Column: 
	- Document: Documents encapsulates and encodes data in some standard forms (XML, JSON, YAML)
	- Key-Value: Associative arrays as their fundamental data model.
	- Graph: This is great for data whose relations can be represented as graphs. 
				These are great for social relations, public transport links, road maps, network topologies,...
	- MultiModel: