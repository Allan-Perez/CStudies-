Difference between a relational database managed with SQL and a file system?
	1. File systems tends to redundancy. This is solved by SQL DBs.
	2. There're concurrency issues in a file system. This is solved by SQL DBs. 
	3. The files are independent between them, they are isolated. This is solved by SQL DBs.
	4. The integrity of the data is put at risk. With Primary and foreign keys, and constraints, this is solved.
	5. Same data is written differently, and there's data duplication. This is called inconsistency. 
		This is solved by SQL. 
	6. Security issues. Autentication, LDAP, Kerberos, ....
	7. Access control. Allows to manage security schemas, roles, access levels, ...
	8. Atomicity

The advantages of SQL can be divided into 3 great groups:
	- DDL: Data Definition Language
		This allows to create, alter, or drop a table, a view, a procedure, and index or an schema:
			CREATE / ALTER / DROP TABLE [name]
			CREATE VIEW / ALTER / DROP [] --> protion of the data that allows to make "views" of a table of n attributes
												and m entries, without having to look everything. Instead, it allows us to 
												create a "simulation table" of k (k<=n) attributes and w (w<=m) entires.
			CREATE / ALTER PROCEDURE [] --> helps to automatize work. This is sort of crontabs for SQL.
			CREATE INDEX [] --> 
			CREATE SCHEMA [] -->  Set of tables that are different, and can be like 2 different schemas, 
									but working in the same database 

	- DML: Data Model Language
		SELECT --> allows to select one or many attributes of one or many tables.
		JOIN.  -->  combines entries of one or more tables. 
		INSERT --> inserts a new tuple in a table.
		UPDATE --> change the value of one or many columns of a table.  
		DELETE --> deletes an entire row (or entry)
		REPLACE -> is the same as update, but just for one specific entry, instead of an entire column of all entries. 
	- DCL: Data Control Lanugage
		GRANT --> Gives privileges to a user.
		REVOKE --> Drops privileges of a user.
		- TCL: Transaction Control Language
			COMMIT --> ends the current transaction
			ROLLBACK -> aborts the current transaction
